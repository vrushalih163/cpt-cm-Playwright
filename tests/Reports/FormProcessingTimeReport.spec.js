import { test, expect } from '@playwright/test';

test('test', async ({ page }) => {
  await page.goto('https://pv02.extendedcare.health/');
  const page1Promise = page.waitForEvent('popup');
  await page.getByRole('button', { name: 'Log In' }).click();
  const page1 = await page1Promise;
  await page1.locator('#UserNameTextBox').click();
  await page1.locator('#UserNameTextBox').fill('akash');
  await page1.locator('#PasswordTextBox').click();
  await page1.locator('#PasswordTextBox').fill('Organization=17');
  await page1.getByText('Log In').click();
  await page.waitForTimeout(4000);
  await page.waitForLoadState('domcontentloaded');
  await page1.getByRole('link', { name: ' Home' }).click();
  await page.waitForTimeout(2000);
  await page.waitForLoadState('domcontentloaded');
  await page1.getByRole('link', { name: 'Change Organization' }).click();
  await page.waitForTimeout(2000);
  await page.waitForLoadState('domcontentloaded');
  await page1.getByRole('link', { name: 'Allscripts QA Hospital 1 (' }).click();
  await page.waitForTimeout(4000);
  await page.waitForLoadState('domcontentloaded');
  await expect(page1.locator('#PageHeader')).toContainText('Allscripts QA Hospital 1 (harpo - 226280)');
  await page.waitForTimeout(2000);
  await page.waitForLoadState('domcontentloaded');
  await page1.getByRole('link', { name: ' Reports' }).click();
  await page.waitForTimeout(2000);
  await page.waitForLoadState('domcontentloaded');
  await page1.getByRole('link', { name: 'Report Library' }).click();
  await page.waitForTimeout(2000);
  await page.waitForLoadState('domcontentloaded');
  await page1.getByRole('link', { name: ' User Activity and' }).click();
  await page.waitForTimeout(2000);
  await page.waitForLoadState('domcontentloaded');
  await expect(page1.locator('#ApiGridReports-data-row-entity-index-1')).toContainText('Form Processing Time Report');
  await page.waitForTimeout(2000);
  await page.waitForLoadState('domcontentloaded');
  await page1.goto('https://pv02.extendedcare.health/professional/Reports/Management/FormProcessingTimeFilter.aspx');
  const page2Promise = page1.waitForEvent('popup');
  await page.waitForTimeout(2000);
  await page.waitForLoadState('domcontentloaded');
  await page1.getByRole('button', { name: 'Generate' }).click();
  await page.waitForTimeout(4000);
  await page.waitForLoadState('domcontentloaded');
  const page2 = await page2Promise;
  await expect(page2.locator('#ReportHeader_lblReportTitle')).toContainText('Form Processing Time Report');
  await page1.getByRole('link', { name: '', exact: true }).click();
});