import { test, expect } from '@playwright/test';

test('test', async ({ page }) => {
  await page.goto('https://pv02.extendedcare.health/');
  const page1Promise = page.waitForEvent('popup');
  await page.getByRole('button', { name: 'Log In' }).click();
  const page1 = await page1Promise;
  await page1.locator('#UserNameTextBox').click();
  await page1.locator('#UserNameTextBox').fill('automation');
  await page1.locator('#UserNameTextBox').press('Tab');
  await page1.locator('#PasswordTextBox').fill('Organization=17');
  await page1.getByText('Log In').click();
  await page1.waitForLoadState('domcontentloaded');
  await page1.waitForTimeout(6000);
  await page1.getByRole('link', { name: ' Configure' }).click();
  await page1.waitForLoadState('domcontentloaded');
  await page1.waitForTimeout(6000);
  await page1.getByRole('link', { name: ' Home' }).click();
  await page1.waitForLoadState('domcontentloaded');
  await page1.waitForTimeout(6000);
  await page1.locator('#MenuBar_MenuLink_26176_27003_38').click();
  await page1.waitForLoadState('domcontentloaded');
  await page1.waitForTimeout(5000);  
   await page1.getByRole('link', { name: 'ECIN Administrative' }).click();
  await page1.getByRole('link', { name: ' Admin' }).click();
  await page1.getByRole('link', { name: 'Organization Lookup' }).click();
  await page1.locator('#cmbOrgTypes').selectOption('1');
  await page1.locator('#txtName').click();
  await page1.locator('#txtName').fill('automation');
  await page1.getByRole('button', { name: 'Search' }).click();
  await page1.locator('#OrganizationsGrid-data-row-entity-index-4').getByRole('link', { name: '' }).click();
  await expect(page1.locator('#Table22')).toContainText('Can Use Multiple Timezones');
  await expect(page1.getByText('Can Use Multiple Timezones')).toBeVisible();
  await page1.getByText('Can Use Multiple Timezones').click();
  await page1.getByText('Can Use Privacy Settings').click();
  await page1.locator('#txtbxComments').click();
  await page1.locator('#txtbxComments').fill('Testing');
  await page1.getByRole('button', { name: 'Save' }).click();
  await page1.getByRole('link', { name: ' Home' }).click();
  await page1.getByRole('link', { name: 'Change Organization' }).click();
  await page1.getByRole('link', { name: 'CM Automation Hospital', exact: true }).click();
  await page1.waitForLoadState('domcontentloaded');
  await page1.waitForTimeout(5000);  
  await page1.getByRole('link', { name: ' Configure' }).click();
  await expect(page1.locator('#MenuBar_MenuLink_26182_28231_1490')).toContainText('Divisions');
  await page1.getByRole('link', { name: 'Divisions' }).click();
  await expect(page1.locator('#lblUserOrgDivisionsHeader')).toContainText('Divisions');
  //await page1.getByRole('row', { name: 'Divisions Division Name:   Code: Add', exact: true }).getByRole('table').click();
  await page1.getByText('Division Name:').click();
  await expect(page1.locator('#ECIN_Pagelet_Content')).toContainText('Division Name:');
  await expect(page1.locator('#Label2')).toContainText('Code:');
  await expect(page1.locator('#btnAddDivision')).toContainText('Add');
  await page1.getByRole('button', { name: 'Add' }).click();
  await expect(page1.locator('#PageValidationSummary')).toContainText('Name is required. Please enter Name.');
  await page1.getByRole('img', { name: 'Name is required. Please' }).click();
  await page1.getByText('Divisions Division Name: Code').click();
  await page1.getByRole('link', { name: '' }).click();
  await page1.getByRole('button', { name: 'Add' }).click();
  await page1.locator('#txtAddName').click();
  await page1.locator('#txtAddName').fill('Testing_Division@1');
  await page1.locator('#txtAddName').press('Tab');
  await page1.locator('#txtAddCode').fill('01');
  await page1.getByRole('button', { name: 'Add' }).click();
  await page1.getByRole('cell', { name: 'Name 5', exact: true }).click();
  await page1.getByRole('cell', { name: 'Name 5', exact: true }).click();
  await expect(page1.locator('#dgUserOrgDivisions')).toContainText('Name 5');
  await expect(page1.locator('#dgUserOrgDivisions')).toContainText('Code');
  await page1.getByRole('cell', { name: 'Assign Facilities', exact: true }).click();
  await expect(page1.locator('#dgUserOrgDivisions')).toContainText('Assign Facilities');
  await page1.getByText('Testing_Division@').click();
  await expect(page1.locator('#dgUserOrgDivisions')).toContainText('Testing_Division@1');
  await expect(page1.locator('#dgUserOrgDivisions')).toContainText('01');
  await page1.getByRole('link', { name: 'Edit Row' }).click();
  await page1.getByRole('link', { name: 'Cancel Changes' }).click();
  await page1.getByRole('link', { name: '0' }).click();
  await page1.locator('div').filter({ hasText: 'Assign Facility' }).nth(1).click();
  await expect(page1.locator('#body')).toContainText('Assign Facility');
  await expect(page1.locator('#FacilityAssignerGrid')).toContainText('Facility Name');
  await expect(page1.locator('#FacilityAssignerGrid')).toContainText('Equals Starts With Contains');
  await page1.getByRole('cell', { name: 'Facility Name Starts With' }).getByRole('textbox').click();
  await page1.getByRole('row', { name: 'AUTO Facility1 AUTO F1', exact: true }).getByRole('checkbox').check();
  await page1.getByRole('row', { name: 'AUTO Facility2 AUTO F2', exact: true }).getByRole('checkbox').check();
  page1.once('dialog', dialog => {
    console.log(`Dialog message: ${dialog.message()}`);
    dialog.dismiss().catch(() => {});
  });
  await page1.getByRole('button', { name: 'Save' }).click();
  await page1.goto('https://pv02.extendedcare.health/professional/Configure/UserOrgDivisions.aspx');
  await expect(page1.locator('#dgUserOrgDivisions')).toContainText('2');
  page1.once('dialog', dialog => {
    console.log(`Dialog message: ${dialog.message()}`);
    dialog.dismiss().catch(() => {});
  });
  await page1.getByRole('button', { name: 'Delete Row' }).click();
  await page1.locator('#txtAddName').click();
  await page1.locator('#txtAddName').fill('Division@123');
  await page1.locator('#txtAddName').press('Tab');
  await page1.locator('#txtAddCode').fill('Test');
  await page1.getByRole('button', { name: 'Add' }).click();
  await page1.getByRole('link', { name: '0' }).click();
  await page1.getByRole('row', { name: 'AUTO Facility1 AUTO F1', exact: true }).getByRole('checkbox').check();
  await page1.getByRole('row', { name: 'AUTO Facility2 AUTO F2', exact: true }).getByRole('checkbox').check();
  page1.once('dialog', dialog => {
    console.log(`Dialog message: ${dialog.message()}`);
    dialog.dismiss().catch(() => {});
  });
  await page1.getByRole('button', { name: 'Save' }).click();
  await page1.getByRole('button', { name: 'Export' }).click();
  await page1.getByLabel('Native (XML)').check();
  await page1.getByLabel('Division@').check();
  const page2Promise = page1.waitForEvent('popup');
  const downloadPromise = page1.waitForEvent('download');
  await page1.getByRole('button', { name: 'Generate' }).click();
  const page2 = await page2Promise;
  const download = await downloadPromise;
  await page1.getByRole('button', { name: 'Back' }).click();
  await page1.getByRole('button', { name: 'Import' }).click();
  await page1.locator('#txtFile').click();
  await page1.getByRole('button', { name: 'Back' }).click();
});